<t:test expected="pass" features="selenium"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
  <t:info>
    <t:title>selenium-026</t:title>
    <t:revision-history>
      <t:revision>
        <t:date>2025-02-09</t:date>
        <t:author>
          <t:name>Norm Tovey-Walsh</t:name>
        </t:author>
        <t:description xmlns="http://www.w3.org/1999/xhtml">
          <p>Created test.</p>
        </t:description>
      </t:revision>
    </t:revision-history>
  </t:info>
  <t:description xmlns="http://www.w3.org/1999/xhtml">
    <p>Tests that key up and key down work for named keys.</p>
  </t:description>
  <t:pipeline>
<p:declare-step xmlns:p="http://www.w3.org/ns/xproc"
                xmlns:cx="http://xmlcalabash.com/ns/extensions"
                name="main" version="3.0">
  <p:import href="https://xmlcalabash.com/ext/library/selenium.xpl"/>
  <p:output port="result" sequence="true"/>

  <cx:selenium>
    <p:with-option name="arguments" select="('--headless')"/>
    <p:with-input>
      <p:inline content-type="text/plain">script version 0.2 .
page "http://localhost:8246/apps/keys.html" .

find $text by id = "keys" .
move to $text .

key down SHIFT .
find $message by id = "message" .
output xpath "string($message)" to result .

key up SHIFT .
find $message by id = "message" .
output xpath "string($message)" to result .

key down ALT .
key down F2 .
find $message by id = "message" .
output xpath "string($message)" to result .

key up F2 .
find $message by id = "message" .
output xpath "string($message)" to result .

key up ALT .
find $message by id = "message" .
output xpath "string($message)" to result .
      </p:inline>
    </p:with-input>
  </cx:selenium>
  <p:for-each>
    <p:wrap-sequence wrapper='keys'/>
  </p:for-each>
  <p:wrap-sequence wrapper="wrapper"/>
</p:declare-step>
  </t:pipeline>
  <t:schematron>
    <s:schema queryBinding="xslt2"
              xmlns:s="http://purl.oclc.org/dsdl/schematron">
      <s:ns prefix="h" uri="http://www.w3.org/1999/xhtml"/>
      <s:pattern>
        <s:rule context="/">
          <s:assert test="wrapper">The result isn’t a wrapper.</s:assert>
          <s:assert test="count(wrapper/keys) = 5">The number of keys is wrong.</s:assert>
          <s:assert test="wrapper/keys[1] = '↓ shift Shift'">The keys are wrong</s:assert>
          <s:assert test="wrapper/keys[2] = '↑  :: Shift'">The keys are wrong</s:assert>
          <s:assert test="wrapper/keys[3] = '↓ alt Alt, alt F2'">The keys are wrong</s:assert>
          <s:assert test="wrapper/keys[4] = '↑ alt Alt :: alt F2'">The keys are wrong</s:assert>
          <s:assert test="wrapper/keys[5] = '↑  :: Alt'">The keys are wrong</s:assert>
        </s:rule>
      </s:pattern>
    </s:schema>
  </t:schematron>
</t:test>

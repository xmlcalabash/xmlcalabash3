<?xml version="1.0" encoding="UTF-8"?>
<t:test expected="pass" features="selenium"
        xmlns:t="http://xproc.org/ns/testsuite/3.0">
  <t:info>
    <t:title>selenium-027</t:title>
    <t:revision-history>
      <t:revision>
        <t:date>2025-01-28</t:date>
        <t:author>
          <t:name>Norm Tovey-Walsh</t:name>
        </t:author>
        <t:description xmlns="http://www.w3.org/1999/xhtml">
          <p>Created test.</p>
        </t:description>
      </t:revision>
    </t:revision-history>
  </t:info>
  <t:description xmlns="http://www.w3.org/1999/xhtml">
    <p>Tests that key up and key down work for ordinary characters.</p>
  </t:description>
  <t:pipeline>
    <p:declare-step xmlns:p="http://www.w3.org/ns/xproc"
                    xmlns:cx="http://xmlcalabash.com/ns/extensions"
                    name="main" version="3.0">
      <p:import href="https://xmlcalabash.com/ext/library/selenium.xpl"/>
      <p:output port="result" sequence="true"/>

      <cx:selenium>
        <p:with-option name="arguments" select="('--headless')"/>
        <p:with-input>
          <p:inline content-type="text/plain">script version 0.2 .
page "http://localhost:8246/apps/keys.html" .

find $text by id = "keys" .
move to $text .

key down "c" .
find $message by id = "message" .
output $message to result .

key up "c" .
find $message by id = "message" .
output $message to result .

key down "abc" .
find $message by id = "message" .
output $message to result .

key up "b" .
find $message by id = "message" .
output $message to result .

key up "ac" .
find $message by id = "message" .
output $message to result .
          </p:inline>
        </p:with-input>
      </cx:selenium>

      <p:wrap-sequence wrapper="Q{{http://www.w3.org/1999/xhtml}}div"/>

    </p:declare-step>
  </t:pipeline>
  <t:schematron>
    <s:schema queryBinding="xslt2"
              xmlns:s="http://purl.oclc.org/dsdl/schematron">
      <s:ns prefix="h" uri="http://www.w3.org/1999/xhtml"/>
      <s:pattern>
        <s:rule context="/">
          <s:assert test="h:div">The result isn’t a p.</s:assert>
          <s:assert test="h:div/h:p[1] = '↓ c'">The content of p[1] is wrong.</s:assert>
          <s:assert test="h:div/h:p[2] = '↑  :: c'">The content of p[2] is wrong.</s:assert>
          <s:assert test="h:div/h:p[3] = '↓ a, b, c'">The content of p[3] is wrong.</s:assert>
          <s:assert test="h:div/h:p[4] = '↑ a, c :: b'">The content of p[4] is wrong.</s:assert>
          <s:assert test="h:div/h:p[5] = '↑  :: c'">The content of p[5] is wrong.</s:assert>
        </s:rule>
      </s:pattern>
    </s:schema>
  </t:schematron>
</t:test>
